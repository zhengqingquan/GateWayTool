/**
* @file:         abc_definition.h
* @author:       96400
* @note:         The code is automatically generated by GatewayTool
* @version:      V1.0.0
* @date:         2023.02.09, 14:29:32
* @brief:        
* @attention:    
**/

#pragma once

#include <stdint.h>

#include "abc_monitorutil.h"


/*
def @IC_TCO1 CAN Message (218000622 0xcfe6cee)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|        True       |   8    |   None  |
+-------------------+--------+---------+
*/
#define IC_TCO1_IDE (1U)
#define IC_TCO1_DLC (8U)
#define IC_TCO1_ID (0xcfe6cee)
#define IC_TCO1_CYC (100U) // ms

typedef struct
{
	int8_t New_Signal_5 : 8;           //  [-] Bits= 8 Factor= 1

	uint8_t New_Signal_4 : 7;          //      Bits= 7 Factor= 2

	abc_FrameMonitor_t monitor;

}abc_IC_TCO1_t;

uint32_t Unpack_abc_IC_TCO1(abc_IC_TCO1_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_abc_IC_TCO1(abc_IC_TCO1_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @New_Message_5 CAN Message (218000623 0xcfe6cef)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|        True       |   8    |   None  |
+-------------------+--------+---------+
*/
#define New_Message_5_IDE (1U)
#define New_Message_5_DLC (8U)
#define New_Message_5_ID (0xcfe6cef)
#define New_Message_5_CYC (100U) // ms

typedef struct
{
	int16_t New_Signal_5 : 10;         //  [-] Bits= 10 Factor= 1

	abc_FrameMonitor_t monitor;

}abc_New_Message_5_t;

uint32_t Unpack_abc_New_Message_5(abc_New_Message_5_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_abc_New_Message_5(abc_New_Message_5_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @EMS_CCVS CAN Message (419361024 0x18fef100)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|        True       |   8    |  确实22 |
+-------------------+--------+---------+
*/
#define EMS_CCVS_IDE (1U)
#define EMS_CCVS_DLC (8U)
#define EMS_CCVS_ID (0x18fef100)
#define EMS_CCVS_CYC (100U) // ms

typedef struct
{
	int8_t New_Signal_1 : 8;           //  [-] Bits= 8 Factor= 1

	int8_t New_Signal_2 : 8;           //  [-] Bits= 8 Factor= 1

	int8_t New_Signal_3 : 8;           //  [-] Bits= 8 Factor= 1

	int8_t New_Signal_4 : 8;           //  [-] Bits= 8 Factor= 1

	abc_FrameMonitor_t monitor;

}abc_EMS_CCVS_t;

uint32_t Unpack_abc_EMS_CCVS(abc_EMS_CCVS_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_abc_EMS_CCVS(abc_EMS_CCVS_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @IC_CCVS1 CAN Message (419361047 0x18fef117)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|        True       |   8    |   None  |
+-------------------+--------+---------+
*/
#define IC_CCVS1_IDE (1U)
#define IC_CCVS1_DLC (8U)
#define IC_CCVS1_ID (0x18fef117)
#define IC_CCVS1_CYC (100U) // ms

typedef struct
{
	uint8_t New_Signal_11 : 8;         //      Bits= 8 Factor= 1

	uint8_t New_Signal_12 : 8;         //      Bits= 8 Factor= 0.5

	uint8_t New_Signal_13 : 8;         //      Bits= 8 Factor= 1 Offset= 10

	int8_t New_Signal_10 : 6;          //  [-] Bits= 6 Factor= 1 Unit:'asd'

	abc_FrameMonitor_t monitor;

}abc_IC_CCVS1_t;

uint32_t Unpack_abc_IC_CCVS1(abc_IC_CCVS1_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_abc_IC_CCVS1(abc_IC_CCVS1_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @BCM_CCVS CAN Message (419361057 0x18fef121)
+-------------------+--------+----------+
| Is Extended Frame | Length | Comment  |
+-------------------+--------+----------+
|        True       |   8    | comments |
+-------------------+--------+----------+
*/
#define BCM_CCVS_IDE (1U)
#define BCM_CCVS_DLC (8U)
#define BCM_CCVS_ID (0x18fef121)
#define BCM_CCVS_CYC (100U) // ms

typedef struct
{
	int8_t New_Signal_3 : 3;           //  [-] Bits= 3 Factor= 1

	abc_FrameMonitor_t monitor;

}abc_BCM_CCVS_t;

uint32_t Unpack_abc_BCM_CCVS(abc_BCM_CCVS_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_abc_BCM_CCVS(abc_BCM_CCVS_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);




/******** END OF FILE ********/
