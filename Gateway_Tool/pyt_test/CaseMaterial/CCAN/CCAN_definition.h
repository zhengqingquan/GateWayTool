/**
* @file         CCAN_definition.h
* @author       96400
* @note         The code is automatically generated by GatewayTool
* @version      V1.0.0
* @date         2023.01.12, 11:03:06
* @brief        
* @attention    
**/

#pragma once

#include <stdint.h>
#include "CCAN_config.h"
#include "CCAN_monitor.h"

/*
def @FBTC_MP5_Mode CAN Message (1277 0x4fd)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_MP5_Mode_IDE (0U)
#define FBTC_MP5_Mode_DLC (8U)
#define FBTC_MP5_Mode_CANID (0x4fd)
#define FBTC_MP5_Mode_CYC (500U) // ms

typedef struct
{
	uint8_t MP5_VehiclePowerSwitch : 2;          //      Bits= 2 Factor= 1

	uint8_t MP5_DriveModeSET : 4;                //      Bits= 4 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_MP5_Mode_t;

uint32_t Unpack_CCAN_FBTC_MP5_Mode(CCAN_FBTC_MP5_Mode_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_MP5_Mode(CCAN_FBTC_MP5_Mode_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_AC_Front2 CAN Message (892 0x37c)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_AC_Front2_IDE (0U)
#define FBTC_AC_Front2_DLC (8U)
#define FBTC_AC_Front2_CANID (0x37c)
#define FBTC_AC_Front2_CYC (100U) // ms

typedef struct
{
	uint8_t AC_InCarTemp : 8;                    //      Bits= 8 Factor= 1

	uint8_t AC_FrontEvapTempTarget : 8;          //      Bits= 8 Factor= 1

	uint8_t AC_FrontACStartReq : 2;              //      Bits= 2 Factor= 1

	uint16_t AC_FrontHeaterInletTempSet : 16;    //      Bits= 16 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_AC_Front2_t;

uint32_t Unpack_CCAN_FBTC_AC_Front2(CCAN_FBTC_AC_Front2_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_AC_Front2(CCAN_FBTC_AC_Front2_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_CBS2 CAN Message (1023 0x3ff)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_CBS2_IDE (0U)
#define FCTB_CBS2_DLC (8U)
#define FCTB_CBS2_CANID (0x3ff)
#define FCTB_CBS2_CYC (100U) // ms

typedef struct
{
	uint8_t CWB_DimmingSwitch : 2;               //      Bits= 2 Factor= 1

	uint8_t CWB_PreWashingSwitch : 2;            //      Bits= 2 Factor= 1

	uint8_t CWB_TurnSwitch : 3;                  //      Bits= 3 Factor= 1

	uint8_t CWB_FrontWiperSwitch : 3;            //      Bits= 3 Factor= 1

	uint8_t CWB_FrontWiperAdjustment : 3;        //      Bits= 3 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_CBS2_t;

uint32_t Unpack_CCAN_FCTB_CBS2(CCAN_FCTB_CBS2_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_CBS2(CCAN_FCTB_CBS2_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_MP5_6 CAN Message (1043 0x413)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_MP5_6_IDE (0U)
#define FBTC_MP5_6_DLC (8U)
#define FBTC_MP5_6_CANID (0x413)
#define FBTC_MP5_6_CYC (500U) // ms

typedef struct
{
	uint8_t Mp5_LKA_Mode : 2;                    //      Bits= 2 Factor= 1

	uint8_t Mp5_LKA_main_SW : 1;                 //      Bits= 1 Factor= 1

	uint8_t Mp5_ISA_Switch : 2;                  //      Bits= 2 Factor= 1

	uint8_t Mp5_TSRSwitch : 2;                   //      Bits= 2 Factor= 1

	uint8_t MP5_DriveModeRemSwitch : 1;          //      Bits= 1 Factor= 1

	uint8_t MFS_AVASSystemSwitch : 2;            //      Bits= 2 Factor= 1

	uint8_t MP5_EnergyReturnIntensionSet : 2;    //      Bits= 2 Factor= 1

	uint8_t MP5_SayHi : 2;                       //      Bits= 2 Factor= 1

	uint8_t MP5_SerchCar : 2;                    //      Bits= 2 Factor= 1

	uint8_t MP5_Open_Close : 2;                  //      Bits= 2 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_MP5_6_t;

uint32_t Unpack_CCAN_FBTC_MP5_6(CCAN_FBTC_MP5_6_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_MP5_6(CCAN_FBTC_MP5_6_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_MP5_2 CAN Message (870 0x366)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_MP5_2_IDE (0U)
#define FBTC_GW_MP5_2_DLC (8U)
#define FBTC_GW_MP5_2_CANID (0x366)
#define FBTC_GW_MP5_2_CYC (500U) // ms

typedef struct
{
	uint8_t MP5_HU_SlotUserSelected : 3;         //      Bits= 3 Factor= 1

	uint8_t MP5_WorkSt : 2;                      //      Bits= 2 Factor= 1

	uint8_t MP5_GearshiftRemindFunctionES : 2;   //      Bits= 2 Factor= 1

	uint8_t MP5_DDS_resetbutton_request : 1;     //      Bits= 1 Factor= 1

	uint8_t MP5_AutoWindLockSe : 1;              //      Bits= 1 Factor= 1

	uint8_t MP5_AutoWindUnlockSet : 1;           //      Bits= 1 Factor= 1

	uint8_t MP5_AutoWindKeyPressSet : 1;         //      Bits= 1 Factor= 1

	uint8_t MP5_Language_Set : 3;                //      Bits= 3 Factor= 1

	uint8_t MP5_PM2_5_EnableSwitch : 2;          //      Bits= 2 Factor= 1

	uint8_t MP5_HU_ULS_BSD_ACTIVATION : 2;       //      Bits= 2 Factor= 1

	uint8_t MP5_HU_ULS_FLK_ACTIVATION : 2;       //      Bits= 2 Factor= 1

	uint8_t MP5_BrightnessChange : 3;            //      Bits= 3 Factor= 1

	uint8_t MP5_ESCOFFSwitch : 2;                //      Bits= 2 Factor= 1

	uint8_t MP5_FCWSwitch : 2;                   //      Bits= 2 Factor= 1

	uint8_t MP5_AEBSwitch : 2;                   //      Bits= 2 Factor= 1

	uint8_t MP5_FCW_Sensitivity : 2;             //      Bits= 2 Factor= 1

	uint8_t MP5_AVHbutton : 2;                   //      Bits= 2 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_MP5_2_t;

uint32_t Unpack_CCAN_FBTC_GW_MP5_2(CCAN_FBTC_GW_MP5_2_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_MP5_2(CCAN_FBTC_GW_MP5_2_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_GW_VCUtoDisplay CAN Message (853 0x355)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_GW_VCUtoDisplay_IDE (0U)
#define FCTB_GW_VCUtoDisplay_DLC (8U)
#define FCTB_GW_VCUtoDisplay_CANID (0x355)
#define FCTB_GW_VCUtoDisplay_CYC (100U) // ms

typedef struct
{
	uint8_t VCU_DrivingPermit : 1;               //      Bits= 1 Factor= 1

	uint8_t VCU_Gear : 3;                        //      Bits= 3 Factor= 1

	uint8_t VCU_SystemFaultWarning : 1;          //      Bits= 1 Factor= 1

	uint8_t VCU_PerformanceLimitedWarning : 1;   //      Bits= 1 Factor= 1

	uint8_t VCU_PumpInvalidWarning : 2;          //      Bits= 2 Factor= 1

	uint16_t VCU_CruisingRange : 10;             //      Bits= 10 Factor= 1

	uint8_t VCU_ParkLockStatus : 2;              //      Bits= 2 Factor= 1

	uint8_t VCU_EnergyRecoveryGearSwitch : 3;    //      Bits= 3 Factor= 1

	uint8_t VCU_DCDCworkSt : 2;                  //      Bits= 2 Factor= 1

	uint8_t VCU_BrakeEnergyReturnIntension : 8;  //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_GW_VCUtoDisplay_t;

uint32_t Unpack_CCAN_FCTB_GW_VCUtoDisplay(CCAN_FCTB_GW_VCUtoDisplay_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_GW_VCUtoDisplay(CCAN_FCTB_GW_VCUtoDisplay_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_AC1 CAN Message (802 0x322)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_AC1_IDE (0U)
#define FBTC_GW_AC1_DLC (8U)
#define FBTC_GW_AC1_CANID (0x322)
#define FBTC_GW_AC1_CYC (100U) // ms

typedef struct
{
	uint8_t AC_AmbTemp : 8;                      //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_AC1_t;

uint32_t Unpack_CCAN_FBTC_GW_AC1(CCAN_FBTC_GW_AC1_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_AC1(CCAN_FBTC_GW_AC1_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_MP5_TBOX_Time CAN Message (1242 0x4da)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_MP5_TBOX_Time_IDE (0U)
#define FBTC_GW_MP5_TBOX_Time_DLC (8U)
#define FBTC_GW_MP5_TBOX_Time_CANID (0x4da)
#define FBTC_GW_MP5_TBOX_Time_CYC (1000U) // ms

typedef struct
{
	uint8_t MP5_TBOX_Time_Month : 4;             //      Bits= 4 Factor= 1

	uint8_t MP5_TBOX_Time_Valid : 1;             //      Bits= 1 Factor= 1

	uint8_t MP5_TBOX_Time_YearMark : 1;          //      Bits= 1 Factor= 1

	uint8_t MP5_TBOX_Time_Date : 5;              //      Bits= 5 Factor= 1

	uint8_t MP5_TBOX_Time_Hour : 5;              //      Bits= 5 Factor= 1

	uint8_t MP5_TBOX_Time_Minute : 6;            //      Bits= 6 Factor= 1

	uint8_t MP5_TBOX_Time_Second : 6;            //      Bits= 6 Factor= 1

	uint8_t MP5_TBOX_Time_Year : 8;              //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_MP5_TBOX_Time_t;

uint32_t Unpack_CCAN_FBTC_GW_MP5_TBOX_Time(CCAN_FBTC_GW_MP5_TBOX_Time_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_MP5_TBOX_Time(CCAN_FBTC_GW_MP5_TBOX_Time_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_IBCM6 CAN Message (833 0x341)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_IBCM6_IDE (0U)
#define FBTC_GW_IBCM6_DLC (8U)
#define FBTC_GW_IBCM6_CANID (0x341)
#define FBTC_GW_IBCM6_CYC (100U) // ms

typedef struct
{
	uint16_t BCM_BattVolt : 10;                  //      Bits= 10 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_IBCM6_t;

uint32_t Unpack_CCAN_FBTC_GW_IBCM6(CCAN_FBTC_GW_IBCM6_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_IBCM6(CCAN_FBTC_GW_IBCM6_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_IBCM3 CAN Message (828 0x33c)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_IBCM3_IDE (0U)
#define FBTC_GW_IBCM3_DLC (8U)
#define FBTC_GW_IBCM3_CANID (0x33c)
#define FBTC_GW_IBCM3_CYC (100U) // ms

typedef struct
{
	uint8_t BCM_DoorLockSt : 1;                  //      Bits= 1 Factor= 1

	uint8_t BCM_IgnitionSt : 2;                  //      Bits= 2 Factor= 1

	uint8_t BCM_FrontWiperSwitchSt : 2;          //      Bits= 2 Factor= 1

	uint8_t BCM_BackWiperParkst : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_BrakeLampStatus : 2;             //      Bits= 2 Factor= 1

	uint8_t BCM_CHMSLStatus : 2;                 //      Bits= 2 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_IBCM3_t;

uint32_t Unpack_CCAN_FBTC_GW_IBCM3(CCAN_FBTC_GW_IBCM3_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_IBCM3(CCAN_FBTC_GW_IBCM3_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FBTC_GW_IBCM2 CAN Message (570 0x23a)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FBTC_GW_IBCM2_IDE (0U)
#define FBTC_GW_IBCM2_DLC (8U)
#define FBTC_GW_IBCM2_CANID (0x23a)
#define FBTC_GW_IBCM2_CYC (40U) // ms

typedef struct
{
	uint8_t BCM_HighBeamStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_HazardLampSt : 1;                //      Bits= 1 Factor= 1

	uint8_t BCM_PositionLampSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RightligthFaultSt : 1;           //      Bits= 1 Factor= 1

	uint8_t BCM_RightligthSt : 1;                //      Bits= 1 Factor= 1

	uint8_t BCM_LetfligthFaultSt : 1;            //      Bits= 1 Factor= 1

	uint8_t BCM_LetfligthSt : 1;                 //      Bits= 1 Factor= 1

	uint8_t BCM_TrunkSt : 1;                     //      Bits= 1 Factor= 1

	uint8_t BCM_FuleTap_LockStatus : 1;          //      Bits= 1 Factor= 1

	uint8_t BCM_LRDoorSwitchSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RRDoorSwitchSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RFDoorSwitchSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_LFDoorSwitchSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_frontFogligthSt : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_BackFogligthSt : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_LowBeamStatus : 1;               //      Bits= 1 Factor= 1

	uint8_t BCM_RightTurnSwitchrSt : 2;          //      Bits= 2 Factor= 1

	uint8_t BCM_LeftTurnSwitchSt : 2;            //      Bits= 2 Factor= 1

	uint8_t BCM_Lock_LED_Output : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_AutoLockFunctionSt : 1;          //      Bits= 1 Factor= 1

	uint8_t BCM_RearWindowHeatSt : 1;            //      Bits= 1 Factor= 1

	uint8_t BCM_FRTurnlightFbSt : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_RRTurnlightFbSt : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_FLTurnlightFbSt : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_RLTurnlightFbSt : 1;             //      Bits= 1 Factor= 1

	uint8_t BCM_LampWashSt : 1;                  //      Bits= 1 Factor= 1

	uint8_t BCM_EngHoodUnlockWarming : 1;        //      Bits= 1 Factor= 1

	uint8_t BCM_ReverseLampSwitchSt : 2;         //      Bits= 2 Factor= 1

	uint8_t BCM_RecentlyLockType : 4;            //      Bits= 4 Factor= 1

	uint8_t BCM_RecentlyUnlockType : 4;          //      Bits= 4 Factor= 1

	uint8_t BCM_RLS_AUTO_SwitchSt : 1;           //      Bits= 1 Factor= 1

	uint8_t BCM_FollowMeHomeSt : 4;              //      Bits= 4 Factor= 1

	uint8_t BCM_FrontWiperWorkSt : 2;            //      Bits= 2 Factor= 1

	uint8_t BCM_MirrorFoldSwitchSt : 2;          //      Bits= 2 Factor= 1

	uint8_t BCM_SunShadeStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RoofWindowStatus : 1;            //      Bits= 1 Factor= 1

	uint8_t BCM_RRWindowStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RFWindowStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_RLWindowStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_LFWindowStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t BCM_TailgateUnlockInform : 1;        //      Bits= 1 Factor= 1

	uint8_t BCM_TailgateOpenSwitch : 1;          //      Bits= 1 Factor= 1

	uint8_t BCM_FrontWiper_AUTO : 2;             //      Bits= 2 Factor= 1

	uint8_t BCM_LowBeam_AUTO : 2;                //      Bits= 2 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FBTC_GW_IBCM2_t;

uint32_t Unpack_CCAN_FBTC_GW_IBCM2(CCAN_FBTC_GW_IBCM2_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FBTC_GW_IBCM2(CCAN_FBTC_GW_IBCM2_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ACU_Crash CAN Message (780 0x30c)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ACU_Crash_IDE (0U)
#define FCTB_ACU_Crash_DLC (8U)
#define FCTB_ACU_Crash_CANID (0x30c)
#define FCTB_ACU_Crash_CYC (100U) // ms

typedef struct
{
	uint8_t RollingCounter30C : 4;               //      Bits= 4 Factor= 1

	uint8_t ACU_AirbagLampSts : 2;               //      Bits= 2 Factor= 1

	uint8_t ACU_Crashout : 2;                    //      Bits= 2 Factor= 1

	uint8_t ACU_PassengerBeltSwitchSig : 1;      //      Bits= 1 Factor= 1

	uint8_t ACU_DriverBeltSwitchSig : 1;         //      Bits= 1 Factor= 1

	uint8_t ACU_CrashoutValid : 1;               //      Bits= 1 Factor= 1

	uint8_t ACU_CheckSum_ACU : 8;                //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ACU_Crash_t;

uint32_t Unpack_CCAN_FCTB_ACU_Crash(CCAN_FCTB_ACU_Crash_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ACU_Crash(CCAN_FCTB_ACU_Crash_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_TAS_SAS_Info CAN Message (165 0xa5)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_TAS_SAS_Info_IDE (0U)
#define FCTB_TAS_SAS_Info_DLC (8U)
#define FCTB_TAS_SAS_Info_CANID (0xa5)
#define FCTB_TAS_SAS_Info_CYC (10U) // ms

typedef struct
{
	int16_t TAS_SAS_SteeringAngle : 16;          //  [-] Bits= 16 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_TAS_SAS_Info_t;

uint32_t Unpack_CCAN_FCTB_TAS_SAS_Info(CCAN_FCTB_TAS_SAS_Info_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_TAS_SAS_Info(CCAN_FCTB_TAS_SAS_Info_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ESC_FPB1 CAN Message (794 0x31a)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ESC_FPB1_IDE (0U)
#define FCTB_ESC_FPB1_DLC (8U)
#define FCTB_ESC_FPB1_CANID (0x31a)
#define FCTB_ESC_FPB1_CYC (100U) // ms

typedef struct
{
	uint8_t ESC_EPBDisplayMessageReq : 3;        //      Bits= 3 Factor= 1

	uint8_t ESC_EPBCruiseControlCancel : 1;      //      Bits= 1 Factor= 1

	uint8_t ESC_EPBWarningIndicationReq : 2;     //      Bits= 2 Factor= 1

	uint8_t ESC_EPBSwitchStatics : 2;            //      Bits= 2 Factor= 1

	uint8_t ESC_EPBSwitchStaticsValidity : 1;    //      Bits= 1 Factor= 1

	uint8_t ESC_EPBStatus : 3;                   //      Bits= 3 Factor= 1

	uint16_t ESC_CurrentOnRightRearCaliper : 10; //      Bits= 10 Factor= 1

	uint16_t ESC_CurrentOnLeftRearCaliper : 10;  //      Bits= 10 Factor= 1

	uint8_t ESC_PbcActuatorStateRight : 3;       //      Bits= 3 Factor= 1

	uint8_t ESC_PbcActuatorStateLeft : 3;        //      Bits= 3 Factor= 1

	uint8_t ESC_RollingCount_EPB : 4;            //      Bits= 4 Factor= 1

	uint8_t ESC_CheckSum_EPB : 8;                //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ESC_FPB1_t;

uint32_t Unpack_CCAN_FCTB_ESC_FPB1(CCAN_FCTB_ESC_FPB1_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ESC_FPB1(CCAN_FCTB_ESC_FPB1_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ESC7 CAN Message (1073 0x431)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ESC7_IDE (0U)
#define FCTB_ESC7_DLC (8U)
#define FCTB_ESC7_CANID (0x431)
#define FCTB_ESC7_CYC (1000U) // ms

typedef struct
{
	uint8_t ESC_ITPMSFrontRightPressureWarn : 2; //      Bits= 2 Factor= 1

	uint8_t ESC_ITPMSFrontLeftPressureWarn : 2;  //      Bits= 2 Factor= 1

	uint8_t ESC_ITPMSRearRightPressureWarnin : 2;//      Bits= 2 Factor= 1

	uint8_t ESC_ITPMSRearLeftPressureWarning : 2;//      Bits= 2 Factor= 1

	uint8_t ESC_DDSSystemStatus : 4;             //      Bits= 4 Factor= 1

	uint8_t ESC_ITPMSWarningStatus : 1;          //      Bits= 1 Factor= 1

	uint8_t ESC_ITPMSMalfunctionStatus : 1;      //      Bits= 1 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ESC7_t;

uint32_t Unpack_CCAN_FCTB_ESC7(CCAN_FCTB_ESC7_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ESC7(CCAN_FCTB_ESC7_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ESC6 CAN Message (291 0x123)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ESC6_IDE (0U)
#define FCTB_ESC6_DLC (8U)
#define FCTB_ESC6_CANID (0x123)
#define FCTB_ESC6_CYC (20U) // ms

typedef struct
{
	uint8_t ESC_DynamicSlopeAccuracy : 2;        //      Bits= 2 Factor= 1

	uint8_t ESC_AVHFunctionSwitch : 1;           //      Bits= 1 Factor= 1

	uint8_t ESC_AVHAvailable : 1;                //      Bits= 1 Factor= 1

	uint8_t ESC_AVH_Status : 1;                  //      Bits= 1 Factor= 1

	uint8_t ESC_AVH_DisplayMessageReq : 1;       //      Bits= 1 Factor= 1

	uint8_t ESC_BLRequest : 1;                   //      Bits= 1 Factor= 1

	uint8_t ESC_EmergencyBrakeLightReq : 1;      //      Bits= 1 Factor= 1

	uint8_t ESC_BrakingEffort : 1;               //      Bits= 1 Factor= 1

	uint8_t ESC_MSRinRegulation : 1;             //      Bits= 1 Factor= 1

	uint8_t ESC_BrakeReleasedFailsafe : 1;       //      Bits= 1 Factor= 1

	uint16_t ESC_UnfilteredYawRate : 12;         //      Bits= 12 Factor= 1

	uint8_t ESC_VehDrivingDirection : 2;         //      Bits= 2 Factor= 1

	uint8_t ESC_DynamicSlope : 6;                //      Bits= 6 Factor= 1

	uint8_t ESC_VehicleHoldStatus : 2;           //      Bits= 2 Factor= 1

	uint8_t ESC_HBAStatus : 2;                   //      Bits= 2 Factor= 1

	uint8_t ESC_cdpAvailable : 1;                //      Bits= 1 Factor= 1

	uint8_t ESC_cdpActive : 1;                   //      Bits= 1 Factor= 1

	uint8_t ESC_RollingCount_ESC6 : 4;           //      Bits= 4 Factor= 1

	uint8_t ESC_CheckSum_ESC6 : 8;               //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ESC6_t;

uint32_t Unpack_CCAN_FCTB_ESC6(CCAN_FCTB_ESC6_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ESC6(CCAN_FCTB_ESC6_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ESC3 CAN Message (289 0x121)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ESC3_IDE (0U)
#define FCTB_ESC3_DLC (8U)
#define FCTB_ESC3_CANID (0x121)
#define FCTB_ESC3_CYC (20U) // ms

typedef struct
{
	uint8_t ESC_ReqDecreaseTorqueFlag : 1;       //      Bits= 1 Factor= 1

	uint8_t ESC_ReqIncreaseTorqueFlag : 1;       //      Bits= 1 Factor= 1

	uint8_t ESC_TCSCtlActive : 2;                //      Bits= 2 Factor= 1

	uint8_t ESC_ESCAlarmSig : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_ESCWorkStatus : 1;               //      Bits= 1 Factor= 1

	uint8_t ESC_keepingGear : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_ESCOFF : 1;                      //      Bits= 1 Factor= 1

	uint16_t ESC_ReqIncreaseTorque : 12;         //      Bits= 12 Factor= 1

	uint16_t ESC_ReqDecreaseTorque : 12;         //      Bits= 12 Factor= 1

	uint8_t ESC_epbRequest : 2;                  //      Bits= 2 Factor= 1

	uint8_t ESC_wheelDirectionRLValid : 1;       //      Bits= 1 Factor= 1

	uint8_t ESC_wheelDirectionRRValid : 1;       //      Bits= 1 Factor= 1

	uint8_t ESC_FRWDirection : 2;                //      Bits= 2 Factor= 1

	uint8_t ESC_FLWDirection : 2;                //      Bits= 2 Factor= 1

	uint8_t ESC_RRWDirection : 2;                //      Bits= 2 Factor= 1

	uint8_t ESC_RLWDirection : 2;                //      Bits= 2 Factor= 1

	uint8_t ESC_ESCValidity : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_vehicleStandstillValid : 1;      //      Bits= 1 Factor= 1

	uint8_t ESC_TCSErrorStatus : 1;              //      Bits= 1 Factor= 1

	uint8_t ESC_VehicleStandstill : 2;           //      Bits= 2 Factor= 1

	uint8_t GW_ESC_RollingCount_ESC3 : 4;        //      Bits= 4 Factor= 1

	uint8_t GW_ESC_CheckSum_ESC3 : 8;            //      Bits= 8 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ESC3_t;

uint32_t Unpack_CCAN_FCTB_ESC3(CCAN_FCTB_ESC3_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ESC3(CCAN_FCTB_ESC3_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);


/*
def @FCTB_ESC2 CAN Message (160 0xa0)
+-------------------+--------+---------+
| Is Extended Frame | Length | Comment |
+-------------------+--------+---------+
|       False       |   8    |   None  |
+-------------------+--------+---------+
*/
#define FCTB_ESC2_IDE (0U)
#define FCTB_ESC2_DLC (8U)
#define FCTB_ESC2_CANID (0xa0)
#define FCTB_ESC2_CYC (10U) // ms

typedef struct
{
	uint16_t ESC_BrakeOilPress : 11;             //      Bits= 11 Factor= 1

	uint8_t ESC_RollingCount_ESC2 : 4;           //      Bits= 4 Factor= 1

	uint8_t ESC_ABSWorkLable : 1;                //      Bits= 1 Factor= 1

	uint8_t ESC_ABSAlarmSig : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_ABSValidity : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_VehSpdValidFlag : 1;             //      Bits= 1 Factor= 1

	uint8_t ESC_EBDAlarmSig : 1;                 //      Bits= 1 Factor= 1

	uint8_t ESC_HBB_StatusValidity : 1;          //      Bits= 1 Factor= 1

	uint8_t ESC_HBB_Status : 2;                  //      Bits= 2 Factor= 1

	uint8_t ESC_CheckSum_ESC2 : 8;               //      Bits= 8 Factor= 1

	uint16_t ESC_VehSpd : 16;                    //      Bits= 16 Factor= 1

	CCAN_FrameMonitor_t mon1;

}CCAN_FCTB_ESC2_t;

uint32_t Unpack_CCAN_FCTB_ESC2(CCAN_FCTB_ESC2_t* _message, const uint8_t _data[], uint8_t _dlc);
uint32_t Pack_CCAN_FCTB_ESC2(CCAN_FCTB_ESC2_t* _message, uint8_t* _data, uint8_t* _len, uint8_t* _ide);




/******** END OF FILE ********/
